const baseUrl="https://a1d2-103-153-105-16.ngrok.io";export default{login:baseUrl+"/login",signup:baseUrl+"/signup",changePassword:baseUrl+"/changePassword",verifyEmail:baseUrl+"/verifyEmail",passwordRecovery:baseUrl+"/passwordRecovery",allowAuthentication:baseUrl+"/allowAuthentication"};import{unhandledErrorHandler,resErrorHandler}from"../utils/errorHandler.js";const commonOptions={},postData=async(r="",e={})=>{try{const o=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify(e),...commonOptions});var t=await o.json();return t.success?t:(resErrorHandler(t),!1)}catch(r){return unhandledErrorHandler(r),!1}};function typeChanger(r,e){r=document.getElementById(r);"password"===r.type?(r.type="text",e.classList.add("active-icon")):(r.type="password",e.classList.remove("active-icon"))}function handleClosebtn(){document.getElementsByClassName("error-msg-wrapper")[0].classList.add("hidden")}window.typeChanger=typeChanger,window.handleClosebtn=handleClosebtn;import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import{printError}from"../utils/errorHandler.js";const allowAuthorization=()=>{};import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import FormSubmitHandler from"../utils/formSubmitHandler.js";class ChangePassword{constructor(){this.submitChangePasswordForm()}submitChangePasswordForm(){const e=document.querySelector("#changePasswordForm");if(e){const r=new FormSubmitHandler(e,["password","passwordRe"]);r.validateOnSubmit().then(r=>(console.log("innnchangePasswordData",r),r?void postData(ApiEndpoints.changePassword,r).then(r=>r?(e.submit(),void console.log({data:r})):this.submitChangePasswordForm()):this.submitChangePasswordForm()))}}}new ChangePassword;import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import FormSubmitHandler from"../utils/formSubmitHandler.js";class Login{constructor(){this.submitLoginForm()}submitLoginForm(){const e=document.querySelector("#loginForm");if(e){const r=new FormSubmitHandler(e,["email","password"]);r.validateOnSubmit().then(r=>r?void postData(ApiEndpoints.login,r).then(r=>r?(e.submit(),void console.log({data:r})):this.submitLoginForm()):this.submitLoginForm())}}}new Login;import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import FormSubmitHandler from"../utils/formSubmitHandler.js";class PasswordRecovery{constructor(){this.submitPasswordRecoveryForm()}submitPasswordRecoveryForm(){const e=document.querySelector("#passwordRecoveryForm");if(e){const r=new FormSubmitHandler(e,["email"]);r.validateOnSubmit().then(r=>r?void postData(ApiEndpoints.passwordRecovery,r).then(r=>r?(e.submit(),void console.log({data:r})):this.submitPasswordRecoveryForm()):this.submitPasswordRecoveryForm())}}}new PasswordRecovery;import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import FormSubmitHandler from"../utils/formSubmitHandler.js";class Signup{constructor(){this.submitSignupForm()}submitSignupForm(){const e=document.querySelector("#signupForm");if(e){const r=new FormSubmitHandler(e,["email","username","password","acceptTerms"]);r.validateOnSubmit().then(r=>r?void postData(ApiEndpoints.signup,r).then(r=>r?(e.submit(),void console.log({data:r})):this.submitSignupForm()):this.submitSignupForm())}}}new Signup;import ApiEndpoints from"../config/apiEndPoints.js";import{postData}from"../fetch/index.js";import{printError}from"../utils/errorHandler.js";const verifyEmail=()=>{const r=document.querySelectorAll("input.otp-input");let e="";if(r.forEach(r=>{e=""+e+r.value}),!e)return printError(null,"Please enter the correct otp");postData(ApiEndpoints.verifyEmail,{otp:e}).then(r=>{r&&(form.submit(),console.log({data:r}))})};let digitValidate=function(r){r.value=r.value.replace(/[^0-9]/g,"")},tabChange=function(r){let e=document.querySelectorAll("input.otp-input");3<=e[r-1].value.length?e[1].focus():""==e[r-1].value&&e[0].focus()};window.digitValidate=digitValidate,window.tabChange=tabChange,window.verifyEmail=verifyEmail;const REGEX={email:/^\S+@\S+\.\S+$/,password:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/};import{isEmpty}from"./helper.js";const openErrorWrapper=()=>{document.getElementsByClassName("error-msg-wrapper")[0].classList.remove("hidden")},printError=(r,e)=>{document.getElementById("error-msg").innerHTML=e,r&&document.getElementById(r).classList.add("has-error"),openErrorWrapper()},removeAllErrors=()=>{var r;for(r of document.getElementsByClassName("has-error"))r.classList.remove("has-error")},clearErrorWrapper=()=>{document.getElementById("error-msg").innerHTML="",document.getElementsByClassName("error-msg-wrapper")[0].classList.add("hidden")},resErrorHandler=r=>{var e=r.message,r=r.err;if(isEmpty(r))return printError(null,e);Object.entries(r).forEach(([r,e])=>{printError(r,e)})},unhandledErrorHandler=r=>{printError(null,"Something went wrong"),console.log({errors:r})};import Validation from"../validation/index.js";import{clearErrorWrapper}from"./errorHandler.js";export default class FormSubmit extends Validation{constructor(r,e){super(),this.form=r,this.fields=e}validateOnSubmit(){return new Promise(t=>{this.form.addEventListener("submit",r=>{r.preventDefault();var{isError:e,data:r}=this.validateAndGetData(this.fields);if(e)return t(!1);clearErrorWrapper(),t(r)})})}}const isEmpty=r=>null==r||"object"==typeof r&&0===Object.keys(r).length||"string"==typeof r&&0===r.trim().length;import{REGEX}from"../utils/constants.js";import{printError,removeAllErrors}from"../utils/errorHandler.js";export default class Validation{constructor(){}validateAndGetData(r){const t=this,o={};let s=!1;return r.forEach(r=>{if(!s){const e=document.querySelector("#"+r);0==t.validateFields(e)?s=!0:"passwordRe"===r&&o.password&&e.value!==o.password?(printError("passwordRe","Password does not match"),s=!0):o[r]=e.value.trim()}}),{isError:s,data:o}}validateFields(r){removeAllErrors();var e=r.value.trim(),t=r.type,o=r.id;return""===e?(printError(o,"Please enter your "+o),!1):"acceptTerms"==o&&!1===r.checked?(printError("acceptTerms","Please accept the terms and conditions"),!1):"email"===o&&!1===REGEX.email.test(e)?(printError(o,"Please enter a valid email address"),!1):"password"!=t||!1!==REGEX.password.test(e)||(printError(o,"password must have minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character"),!1)}}export{postData,REGEX,openErrorWrapper,printError,removeAllErrors,clearErrorWrapper,resErrorHandler,unhandledErrorHandler,isEmpty};